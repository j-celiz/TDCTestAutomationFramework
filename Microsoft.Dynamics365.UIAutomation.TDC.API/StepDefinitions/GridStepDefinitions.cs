using Microsoft.Dynamics365.UIAutomation.Api.UCI;
using TechTalk.SpecFlow.Infrastructure;

namespace Microsoft.Dynamics365.UIAutomation.TDC.StepDefinitions
{
    /// <summary>
    /// Step Definitions for setting, getting and checking the data in tables from D365 Business Central forms.
    /// </summary>
    [Binding]
    public class GridStepDefinitions : BaseStepDefinitions
    {
        private readonly ScenarioContext _scenarioContext;
        private readonly ISpecFlowOutputHelper _specFlowOutputHelper;

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// <code>List&lt;GridItem&gt; GridItems = GetGridItems();</code>
        /// </example>
        /// <returns></returns>
        /// <exception cref="SpecFlowException"></exception>
        private List<GridItem> GetGridItems()
        {
            var ScenarioContextGridItems = _scenarioContext["GridItems"];
            if (ScenarioContextGridItems != null)
            {
                return (List<GridItem>)ScenarioContextGridItems;
            }
            else
            {
                throw new SpecFlowException("This step cannot be called without having 'Then user sees search results' step before.");
            }
        }

        public GridStepDefinitions(ScenarioContext scenarioContext, ISpecFlowOutputHelper specFlowOutputHelper)
        {
            _scenarioContext = scenarioContext;
            _specFlowOutputHelper = specFlowOutputHelper;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user opens record '10321'
        /// </example>
        /// <param name="recordNo"></param>
        [StepDefinition(@"user opens record '([^']*)'")]
        public void WhenUserOpensRecord(string recordNo)
        {
            XrmApp.BusinessCentral.OpenRecord(recordNo);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees that new record in 'Purchase Orders' was created successfully
        /// </example>
        [Then(@"user sees that new record in '[^']*?' was created successfully")]
        public void ThenUserSeesThatNewRecordWasCreated()
        {
            var AutogeneratedValue = _scenarioContext["AutogeneratedValue"].ToString();
            _specFlowOutputHelper.WriteLine($"New record value: {AutogeneratedValue}");
            var GridItems = GetGridItems();
            var MatchingRecordsFound = GridItems.Count;
            MatchingRecordsFound.Should().NotBe(0);
            GridItems[0]["No."].Should().Be(AutogeneratedValue);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees 'Items' record '10577' in search results
        /// </example>
        /// <param name="recordNumber"></param>
        [Then(@"user sees '[^']*?' record '([^']*)' in search results")]
        public void ThenUserSeesRecordInSearchResults(string recordNumber)
        {
            var GridItems = GetGridItems();
            var MatchingRecordsFound = GridItems.Count;
            MatchingRecordsFound.Should().NotBe(0);
            GridItems[0]["No."].Should().Be(recordNumber);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user searches for page 'Vendors' record 'V2009'
        /// </example>
        /// <param name="searchPage"></param>
        /// <param name="searchValue"></param>
        [StepDefinition(@"*?er searches for page '([^']*)' record '([^']*)'")]
        public void WhenUserSearchesForRecord(string searchPage, string searchValue)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.BusinessCentral.SearchForPage(searchPage);
            XrmApp.BusinessCentral.SearchRecords($"'{searchValue}'");
        }

        [StepDefinition(@"*?er searches for '[^']*?' record '([^']*)'")]
        public void WhenUserSearchesForRecordOnCurrentPage(string searchValue)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.BusinessCentral.SearchRecords($"'{searchValue}'");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user searches for record 'V2009'
        /// </example>
        /// <param name="searchValue"></param>
        [When(@"*?er searches for record '([^']*)'")]
        public void WhenUserSearchesForRecord(string searchValue)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.BusinessCentral.SearchRecords($"'{searchValue}'");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user searches for record using previously populated value of 'Statement No.'
        /// </example>
        /// <param name="prevPopValueLabel"></param>
        [When(@"user searches for record using previously populated value of '([^']*)'")]
        public void WhenUserSearchesForRecordUsingPreviouslyPopulatedValueOf(string prevPopValueLabel)
        {
            var PreviouslyPopulatedValue = _scenarioContext[prevPopValueLabel].ToString();
            _scenarioContext.Remove("GridItems");
            XrmApp.BusinessCentral.SearchRecords($"'{PreviouslyPopulatedValue}'");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user searches for new record
        /// When user searches for new records
        /// </example>
        [When(@"*?er searches for new record")]
        [When(@"*?er searches for new records")]
        public void WhenUserSearchesForNewRecords()
        {
            _scenarioContext.Remove("GridItems");
            var AutogeneratedValue = _scenarioContext["AutogeneratedValue"].ToString();
            _specFlowOutputHelper.WriteLine($"New record value: {AutogeneratedValue}");
            XrmApp.BusinessCentral.SearchRecords($"'{AutogeneratedValue}'");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user searches for page 'Purchase Credit Memos' new record
        /// </example>
        /// <param name="searchPage"></param>
        [When(@"*?er searches for page '([^']*)' new record")]
        public void WhenUserSearchesForNewRecord(string searchPage)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.BusinessCentral.SearchForPage(searchPage);
            var AutogeneratedValue = _scenarioContext["AutogeneratedValue"].ToString();
            _specFlowOutputHelper.WriteLine($"New record value: {AutogeneratedValue}");
            XrmApp.BusinessCentral.SearchRecords($"'{AutogeneratedValue}'");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user searches for page 'Purchase Credit Memos' new record number of 'Purchase Credit Memo'
        /// </example>
        /// <param name="searchPage"></param>
        /// <param name="formName"></param>
        [When(@"*?er searches for page '([^']*)' new record number of '([^']*)'")]
        public void WhenUserSearchesForNewRecordOf(string searchPage, string formName)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.BusinessCentral.SearchForPage(searchPage);
            var AutogeneratedValue = _scenarioContext[formName].ToString();
            _specFlowOutputHelper.WriteLine($"New record value of {formName}: {AutogeneratedValue}");
            XrmApp.BusinessCentral.SearchRecords($"'{AutogeneratedValue}'");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees that new record in 'Bank Account Reconciliations' does not exist
        /// </example>
        [Then(@"user sees that new record in '[^']*?' does not exist")]
        public void ThenUserSeesThatRecordInDoesNotExist()
        {
            var GridItems = GetGridItems();
            var MatchingRecordsFound = GridItems.Count;
            MatchingRecordsFound.Should().Be(0);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees that 'Purchase Orders' column 'Status' has value 'Released'
        /// </example>
        /// <param name="column"></param>
        /// <param name="expectedColumnValue"></param>
        [Then(@"user sees that '[^']*?' column '([^']*)' has value '([^']*)'")]
        public void ThenUserSeesThatColumnHasValue(string column, string expectedColumnValue)
        {
            var GridItems = GetGridItems();
            string? ActualColumnValue = GridItems[0][column].ToString();
            ActualColumnValue.Should().Be(expectedColumnValue);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees that 'Purchase Orders' column 'Issued on' has populated value
        /// </example>
        /// <param name="column"></param>
        [Then(@"user sees that '[^']*?' column '([^']*)' has populated value")]
        public void ThenUserSeesThatColumnHasPopulatedValue(string column)
        {
            var GridItems = GetGridItems();
            string? ActualColumnValue = GridItems[0][column].ToString();
            ActualColumnValue.Should().NotBeEmpty();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees that 'Purchase Orders' row '2' in column 'Status' has value 'Released'
        /// </example>
        /// <param name="gridRow"></param>
        /// <param name="gridColumnName"></param>
        /// <param name="expectedCellValue"></param>
        [Then(@"user sees that '[^']*?' row '([\d]*)' in column '([^']*)' has value '([^']*)'")]
        public void ThenUserSeesThatGridRowInColumnHasValue(int gridRow, string gridColumnName, string expectedCellValue)
        {
            int GridIndex = gridRow - 1;
            var GridItems = GetGridItems();
            GridItems[GridIndex][gridColumnName].Should().Be(expectedCellValue);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// Then user sees search results
        /// </example>
        [When(@"*?er sees search results")]
        [Then(@"*?er sees search results")]
        public void ThenUserSeesSearchResults()
        {
            //Checking if there is no unexpected dialog message
            string DialogMessage = XrmApp.BusinessCentral.GetDialogMessage();
            DialogMessage.Should().BeEmpty();
            string ExceptionDialogMessage = XrmApp.BusinessCentral.GetExceptionDialogMessage();
            ExceptionDialogMessage.Should().BeEmpty();
            _scenarioContext.Remove("GridItems");
            _scenarioContext.Add("GridItems", XrmApp.BusinessCentral.GetGridItems());
        }

        /// <summary>
        /// 
        /// </summary>
        /// <example>
        /// When user opens first record
        /// </example>
        [When(@"*?er opens first record")]
        public void WhenUserOpensFirstRecord()
        {
            List<GridItem>? GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            XrmApp.BusinessCentral.OpenRecord(GridItems?.ToArray()[0]["No."].ToString());
        }
    }
}